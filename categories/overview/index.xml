<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on M1sty</title>
    <link>https://www.m1sty.com/categories/overview/</link>
    <description>Recent content in Overview on M1sty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.m1sty.com/categories/overview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>商业智能</title>
      <link>https://www.m1sty.com/2021/overview_bi_map/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.m1sty.com/2021/overview_bi_map/</guid>
      <description>BI的价值  我们的使命：让业务更清晰，让决策更高效 我们的远景：打造阿里巴巴数字经济决策支持系统  工作的本质（关键词）  给事实  用数据描述整体业务的表现情况 用具体的数据描述业务，客观描述 如何定义业务   给结论  业务处在什么阶段，发展状况，是否达到满意的状况   给建议  给策略价值 如何通过数据分析给用户更好的服务    能力要求 懂商业、懂数据、会分析、助业务
 计算机基础（sql取数，处理） 数理统计（如何有机整合数据，结构化） 商业理解（让分析结果有落地性，提升决策效率） 系统化思考（不仅仅考虑当下，要考虑未来的远景，蝴蝶效应） 逻辑思考（因果关系，哪些东西对业务产生积极/消极影响，是长期还是短期） 结构化思考（问题拆解，有结构的拆解，分解分拆，寻找主干，解决主干的问题，看到全局）  BI职业发展  助力决策 专业精进  阿里BI的优势  数据环境好（海量数据 海量业务） 阿里偏重决策支持，面向高管，多看多学习 （部门）技术中台，简单直接  阿里BI与外面的区别  商业理解（快速学习业务） 发现问题 分析问题 解决问题 给出结论 偏决策分析  如何与其他部门业务合作  合作部门  业务团队 数据产品团队（反馈需求） 财务 法务    如何准备  冷静、有条理、有框架  面试什么？  分析相关的基础知识 做什么分析项目 商业情景如何分析（用什么指标） 思路展示  </description>
    </item>
    
    <item>
      <title>知识框架</title>
      <link>https://www.m1sty.com/2021/overview_interview_map/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.m1sty.com/2021/overview_interview_map/</guid>
      <description>Database sql基础知识 sql基础知识
  索引：索引是对数据库表中一列或多列的值进行排序的一种结构，使用索引可快速访问数据库表中的特定信息。如果想按特定职员的姓来查找他或她，则与在表中搜索所有的行相比，索引有助于更快地获取信息。索引分为聚簇索引和非聚簇索引两种，聚簇索引是按照数据存放的物理位置为顺序的，而非聚簇索引就不一样了；聚簇索引能提高多行检索的速度，而非聚簇索引对于单行的检索很快。根据数据库的功能，可以在数据库设计器中创建三种索引：唯一索引、主键索引和聚集索引。
 唯一索引：唯一索引是不允许其中任何两行具有相同索引值的索引。当现有数据中存在重复的键值时，大多数数据库不允许将新创建的唯一索引与表一起保存。数据库还可能防止添加将在表中创建重复键值的新数据。例如，如果在employee表中职员的姓(lname)上创建了唯一索引，则任何两个员工都不能同姓。 主键索引：数据库表经常有一列或多列组合，其值唯一标识表中的每一行。该列称为表的主键。在数据库关系图中为表定义主键将自动创建主键索引，主键索引是唯一索引的特定类型。该索引要求主键中的每个值都唯一。当在查询中使用主键索引时，它还允许对数据的快速访问。 聚集索引：在聚集索引中，表中行的物理顺序与键值的逻辑（索引）顺序相同。一个表只能包含一个聚集索引。如果某索引不是聚集索引，则表中行的物理顺序与键值的逻辑顺序不匹配。与非聚集索引相比，聚集索引通常提供更快的数据访问速度。聚集索引和非聚集索引的区别，如字典默认按字母顺序排序，读者如知道某个字的读音可根据字母顺序快速定位。因此聚集索引和表的内容是在一起的。如读者需查询某个生僻字，则需按字典前面的索引，举例按偏旁进行定位，找到该字对应的页数，再打开对应页数找到该字。这种通过两个地方而查询到某个字的方式就如非聚集索引。    union all &amp;amp; union
 union和union all的区别是,union会自动压缩多个结果集合中的重复结果，而union all则将所有的结果全部显示出来，不管是不是重复。 *Union：对两个结果集进行并集操作，不包括重复行，同时进行默认规则的排序；*Union在进行表链接后会筛选掉重复的记录，所以在表链接后会对所产生的结果集进行排序运算，删除重复的记录再返回结果。实际大部分应用中是不会产生重复的记录，最常见的是过程表与历史表UNION。 *Union All：对两个结果集进行并集操作，包括重复行，不进行排序；*如果返回的两个结果集中有重复的数据，那么返回的结果集就会包含重复的数据了。    sql笔试题 SQL面试必会50题
# 查询每门功成绩最好的前两名 SELECT c_id, max(case when rank1 = 1 then s_score else null end ) as &amp;#39;第一&amp;#39;, max(case when rank1 = 2 then s_score else null end ) as &amp;#39;第二&amp;#39; FROM (SELECT score.s_id, student.s_name, score.c_id, score.s_score, row_number() over(partition by c_id order by s_score DESC) rank1 FROM score INNER JOIN student ON score.</description>
    </item>
    
    <item>
      <title>数据分析学习路径</title>
      <link>https://www.m1sty.com/2020/overview_data-analyst_map/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.m1sty.com/2020/overview_data-analyst_map/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
